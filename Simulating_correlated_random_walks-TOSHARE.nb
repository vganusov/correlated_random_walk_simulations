(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     85312,       1755]
NotebookOptionsPosition[     81302,       1674]
NotebookOutlinePosition[     83015,       1721]
CellTagsIndexPosition[     82972,       1718]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox["\n\n",
  FontSize->24],
 StyleBox["Simulating correlated random walk using von Mises-Fisher \
distribution\n",
  FontSize->30],
 StyleBox["\n",
  FontSize->24],
 StyleBox["\nFeb 2019 - Oct 2020 - Dec 2020\n",
  FontSize->18,
  FontWeight->"Plain",
  FontColor->GrayLevel[0]]
}], "Title",
 CellFrame->3,
 TextAlignment->Center,
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0, 0],
 Background->RGBColor[
  0.65626, 0.660166, 
   0.87892],ExpressionUUID->"2d6c8694-6b27-4d6f-8b78-a88048cc786f"],

Cell[CellGroupData[{

Cell["\<\
Correlated random walk: varying k_t (average turning angle) and sampling \
frequency\
\>", "Subsection",
 CellMargins->{{60, Inherited}, {Inherited, Inherited}},
 FontColor->RGBColor[
  1, 0, 0],ExpressionUUID->"8702ffee-3200-4205-9494-1212ae3e136e"],

Cell[TextData[{
 "\nThis is the main function defining random vector relative to vector ",
 StyleBox["\[Mu]",
  FontWeight->"Bold"],
 " with a bias defined by the concentration parameter ",
 StyleBox["\[Kappa]",
  FontWeight->"Bold"],
 "\n"
}], "Text",
 FontSize->18,ExpressionUUID->"8b65efd2-58df-4566-905d-ffe8b5cc98ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vonMisesFisherRandom", "[", 
   RowBox[{
    RowBox[{"\[Mu]_", "?", "VectorQ"}], ",", 
    RowBox[{"\[Kappa]_", "?", "NumericQ"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Xi]", "=", 
       RowBox[{"RandomReal", "[", "]"}]}], ",", "w"}], "}"}], ",", 
    RowBox[{
     RowBox[{"w", "=", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", "\[Xi]", "]"}], "+", 
          RowBox[{"Log", "[", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Xi]"}], ")"}], " ", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "2"}], " ", "\[Kappa]"}], "]"}], "/", 
              "\[Xi]"}]}]}], "]"}]}], ")"}], "/", "\[Kappa]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"RotationTransform", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"Normalize", "[", "\[Mu]", "]"}]}], "}"}], "]"}], "[", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"w", "^", "2"}]}], "]"}], " ", 
         RowBox[{"Normalize", "[", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", "]"}], ",", "2"}], "]"}], 
          "]"}]}], ",", "w"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.733157847843131*^9, 3.733157847856123*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"0a12dcb5-b769-4e27-8bc7-7a5333e1a1ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Example", " ", "of", " ", "one", " ", "random", " ", "vector"}], 
   " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SeedRandom", "[", "1", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rmean", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"alpha", "=", "5.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmin", "=", 
     RowBox[{"rmean", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"alpha", "-", "1"}], ")"}], "/", "alpha"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"mu0", "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x10", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x20", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"mu", "=", 
    RowBox[{
     RowBox[{"RandomVariate", "[", 
      RowBox[{"ParetoDistribution", "[", 
       RowBox[{"xmin", ",", "alpha"}], "]"}], "]"}], "*", 
     RowBox[{"vonMisesFisherRandom", "[", 
      RowBox[{"mu0", ",", "0.0001"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"VectorAngle", "[", 
      RowBox[{"mu0", ",", "mu"}], "]"}], "/", "Pi"}], "*", 
    "180"}]}]}]], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"90a3c559-6b06-49d1-abdd-91ada6b6ade7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellLabel->"Out[6]=",ExpressionUUID->"20145e62-c695-4009-a957-df4e8b4706b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.3191725910086853`"}], ",", "0.9877224607630529`", ",", 
   RowBox[{"-", "0.40692564530194225`"}]}], "}"}]], "Output",
 CellLabel->"Out[9]=",ExpressionUUID->"97a9d314-d563-416e-a5bf-b3e5ebdfc46f"],

Cell[BoxData["140.9995460752951`"], "Output",
 CellLabel->"Out[10]=",ExpressionUUID->"30776c16-25c7-45e8-819c-447b2ce7be22"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "\nFunction ",
 Cell[BoxData[
  FormBox[
   StyleBox["OneMovement",
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "79acb04b-1426-4e08-a4eb-34e8bc032ad9"],
 " defining one movement with a correlated random walk with bias defined by \
",
 Cell[BoxData[
  FormBox[
   StyleBox["kappaT",
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "fcd77e22-6001-4c63-a62b-f3838d59d60b"],
 " and 2 cell positions ",
 Cell[BoxData[
  FormBox[
   StyleBox["x1",
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "7cf74cd4-9209-4d4a-98e0-1efda61a77a0"],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox["x2",
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c01bb2b1-db16-4575-a556-16047326ea0f"],
 " to define movement vector relate to which next movement will be done. \
Output of the function is the position x2 and the next position. Movement \
length is randomly sampled from Pareto distribution with parameters ",
 Cell[BoxData[
  FormBox[
   StyleBox["xmin",
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "61781bc6-52c2-4de3-83d6-4eb1e7984133"],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox["alpha",
    FontWeight->"Bold"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "9b0b8c00-7321-4132-96af-c5fe93e2f4ea"],
 ". \n"
}], "Text",
 FontSize->18,ExpressionUUID->"d91f5539-6114-41da-9157-c62d8b23059c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"kappaT", ",", "OneMovement"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OneMovement", "[", 
   RowBox[{"{", 
    RowBox[{"x1_", ",", "x2_"}], "}"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"x2", ",", 
    RowBox[{"x2", "+", 
     RowBox[{
      RowBox[{"RandomVariate", "[", 
       RowBox[{"ParetoDistribution", "[", 
        RowBox[{"xmin", ",", "alpha"}], "]"}], "]"}], "*", 
      RowBox[{"vonMisesFisherRandom", "[", 
       RowBox[{
        RowBox[{"x2", "-", "x1"}], ",", "kappaT"}], "]"}]}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kappaT", "=", "1.0001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x10", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x20", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"OneMovement", "[", 
  RowBox[{"{", 
   RowBox[{"x10", ",", "x20"}], "}"}], "]"}]}], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"9e9b1ac3-3013-487b-8cfb-9dfb41583aeb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.356111968059568`", ",", 
     RowBox[{"-", "1.382383771802376`"}], ",", "0.011666300044290116`"}], 
    "}"}]}], "}"}]], "Output",
 CellLabel->"Out[22]=",ExpressionUUID->"b6f90635-1ed5-4056-aee0-8e402da31f6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "calculating", " ", "nsteps", " ", "for", " ", "one", " ", "cell", " ", 
    "moving"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SeedRandom", "[", "1", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nsteps", "=", "500"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"onecellmovement", "=", 
     RowBox[{"NestList", "[", 
      RowBox[{"OneMovement", ",", 
       RowBox[{"{", 
        RowBox[{"x10", ",", "x20"}], "}"}], ",", "nsteps"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Length", "[", "%", "]"}]}]}]], "Input",
 CellLabel->"In[23]:=",ExpressionUUID->"d295361d-3f14-434a-92d9-8c671b8a57f5"],

Cell[BoxData["501"], "Output",
 CellLabel->"Out[26]=",ExpressionUUID->"09375595-05fa-417d-b9bf-baa6478b5f09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "taking", " ", "sequential", " ", "positions", " ", "of", " ", "the", " ", 
    "cell", " ", "and", " ", "plotting", " ", "it"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"alldata2", "=", 
     RowBox[{"onecellmovement", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xlim", "=", "50"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"myFig1", "=", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"ListPointPlot3D", "[", 
        RowBox[{"alldata2", ",", "\[IndentingNewLine]", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", "\[IndentingNewLine]", "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "xlim"}], ",", "xlim"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "xlim"}], ",", "xlim"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "xlim"}], ",", "xlim"}], "}"}]}], "}"}]}]}], 
        "\[IndentingNewLine]", "]"}], "/.", 
       RowBox[{
        RowBox[{"Point", "[", "a___", "]"}], "\[RuleDelayed]", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Blue", ",", 
          RowBox[{"Line", "[", "a", "]"}]}], "}"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ListPointPlot3D", "[", "alldata2", "]"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellLabel->"In[27]:=",ExpressionUUID->"b6167597-a426-4d65-b351-c6a1cac6ff18"],

Cell[BoxData[
 Graphics3DBox[{{{
     {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], 
      {RGBColor[0, 0, 1], Thickness[Large], Line3DBox[CompressedData["
1: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
Ss9bFrr/TRr+B5twIhI=
        "]]}}, {}, {}}, {}}, {{
     {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Point3DBox[CompressedData["
1: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
Ss9bFrr/TRr+B5twIhI=
       "]]}, {}, {}}, {}}},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  Epilog->{},
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Lighting->{{"Ambient", 
     GrayLevel[0.5]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{0, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 0, 2}]}},
  PlotRange->{{-50, 50}, {-50, 50}, {-50, 50}},
  PlotRangePadding->{{0, 0}, {0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellLabel->"Out[29]=",ExpressionUUID->"d79737e3-2734-4ed4-b7ac-e2827f9d52a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculating", " ", "correlation", " ", "between", " ", "average", " ", 
    "turning", " ", "angle", " ", "and", " ", "average", " ", "speed", " ", 
    "per", " ", "cell"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"k", "=", "3"}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"sample", " ", "every", " ", "3", " ", "positions"}], " ", "-", 
      " ", 
      RowBox[{"vary", " ", "between", " ", "1", " ", "and", " ", "49"}]}], 
     " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"tempdata1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"EuclideanDistance", "[", 
           RowBox[{
            RowBox[{"alldata2", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "k"}], "]"}], "]"}], ",", 
            RowBox[{"alldata2", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", 
               RowBox[{"2", "*", "k"}]}], "]"}], "]"}]}], "]"}], "/", "k"}], 
         ",", 
         RowBox[{"180", "*", 
          RowBox[{
           RowBox[{"VectorAngle", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"alldata2", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "k"}], "]"}], "]"}], "-", 
              RowBox[{"alldata2", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"alldata2", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", 
                 RowBox[{"2", "*", "k"}]}], "]"}], "]"}], "-", 
              RowBox[{"alldata2", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "k"}], "]"}], "]"}]}]}], "]"}], "/", 
           RowBox[{"(", "Pi", ")"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "alldata2", "]"}], "-", 
          RowBox[{"2", "*", "k"}]}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], "=", 
    RowBox[{"Fit", "[", 
     RowBox[{"tempdata1", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"{", "tempdata1", "}"}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"f", "[", "x", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", 
         RowBox[{"Max", "[", 
          RowBox[{"tempdata1", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
      "]"}]}], "]"}]}]}]], "Input",
 CellLabel->"In[33]:=",ExpressionUUID->"e9e1a665-e91a-49a9-bc23-8f3c1f72082c"],

Cell[BoxData[
 RowBox[{"99.27090756488491`", "\[VeryThinSpace]", "-", 
  RowBox[{"13.009989626576699`", " ", "x"}]}]], "Output",
 CellLabel->"Out[34]=",ExpressionUUID->"479d335a-260f-4e0f-8e10-f6c4d84a6fb9"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwVl3c8lf8bxo+iIqNEJaUk0bKikNw32fPgOI69paVhhIhCWWWVUpGESkUk
pexIIYr4Gi2yN8dxlvE7v7+efz6v5/V87vu5rut9SbqdtfRcQSAQprgIhP8/
M9Ta1PNHqJAYQetfM2KCTsrmQoWNEzC1mPn0lxAJd6e1UF7YzYLosubg+HdH
PGn1Y+7zJjasSL5zc9dZS7za2c/TumcZurd5DjeVWOAR/r2j+vo0oLQfMd7+
A5GS12vc+2MWmtOltr+2JaHYtIqL8CEmqK14u1XVyBZdiE/5b2QsgpDTH+dd
giRcl7Ng88OLDm/Et5Ha2i1QTsWk+NthKlzzFil89J8uEpUOZaULsOGH077i
ew8ssUSywJcrYhye0tzvxp51wPiZXTIki3moLMzVTdK3wejaZ/XneNnAPhwX
Fa5th6onK1N6dlIh+btTlcETM/S7PuQXeXMSPqxQLz+zwwQDS40qNCMGIP1s
AIoX2OJAzedinRfTcODDxOKUuTt+8z8yk/9hGmZumU/JD9tipNKqLde1ByDj
am2OW5khKhRoVmfqzMJ3hRkHWqoruj1jNz3WnoWCFi3b7jBXTNgT7bny4jSU
HR9UMdrlhOlG4+9Y36iQ0W4wvFnIHsv16qUzk+mwT5jLu37eHt2yleth7yIk
HuJ/1qJlgdG8AgNbDrJhdUbJ8LZxDUx7zqMnasIArrpK8bdS2ti8cdFP+iUD
ui7w1gX6mmNk/UzV16oZeFDaqEb+boLpfZZiOQpU0NYZhuqSY6h3LqQk6dkc
FE70qVMOmiPP1s4/vrM9wJpJZZPDiVjWy6g5waLDA27CPp1t7pjf5P5PY5GA
r3L/PmKHuaPoUrz96jomOA2fr/YZdcLVxWfnVDfRYGMgz7/2MBLy2RkplYTP
QbTOp7jwHaZ4aN9eiT7dSUigXS9VVbRCmoWr/oaAH3A3/+t4a54FOvxZ+83E
aRQULExzT+1xQcp9/ilvlWn45+qbR0m1x7+NAkXxJlSIDY5n+jt7YGifD38Z
DsPq5EZvbyNFfFb99+ps1zfQXHdSbeGTK3acGhVQaxiHeD37v+7d7qhhvVpk
wpEOG3Ym2sl/dsfIp73Pf+suAm7vib0XrIW9vD43eq4ugSrbjP+/WiK6TtfS
umOZUO3XpXr4iDEWxubsrpVmwn/xdhazRC2MnHXz7wqgQ/TERVPSNlUse/I+
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
J/KjGQn/B76L84Q=
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVx3k41HkcwPExfukObZtGTa10MlHS8QjfT4cjsfub+5eVK/LMLEY5mrGU
ZVtHjMqxOuxUoynVINUak9RolprU6FAUOpZ6qJiZhjDS2j/ez/t52YULGJFk
EokUMNH/9/VRKfgJ0Z4pSZpsziMCDM7dbrNs/VDsWoPqcgsBgvpZjFZKIArT
UUbJE66YVNapoPCRN5/Hr3xIQEB5rPQiJRlZB0/ZMaWZAKqJ+YeUkoPOeXnP
UDYSMKms8YuEcgJp5zSIqXUEiIYPrv6LchHZX60t6JYRkK5YOiZxuYGUW7zP
vBYS0LT9+Of1rmo05ttP7w0gIPPE7qsGuQaxLDv/uWdPgM0mXo/NixZUuoLn
MW+IC6fi+qrX2T1FRxVWRPx9LhR98KAVVjxHCSfZSe6lXHAkrk7b5fgSCTzf
cDsFXNiXa3BYGt2F5hBZHTleXJhrnm4qHnmNytXNETIbLjRLBeT5kreo9zzt
yMOPHKB79G9iuXcj2PHkwMMGDuSPsO/Lx3pQ5mabve5FHJAdP2uykLxHwook
ixo+B/YHtf2WFtGLAmPjJRJ3DsydJ3GrtPuAmP1/m0IsOSCu8SvsvP0RDXV/
b6L1sOG26NVWWkY/ynaaPR5Vw4aefJrfze90qKl/ZVllLht8jLtKE77o0KDZ
q4DIYDZYtz7PtniuR26tL5SG1WxoWq72LjlvQA6LDJpcCza8mH7OSZn9GU2r
k3UVtrGgPWz43csgIyrUJhWVy1mAXAs3tjkOovXSPMviDBaQS5Zcj5gxhJru
bc7TsVlQHbOcrO8cQuZR1hVcRxbceroweabqC3LmHnhM+8qEtYrgw9jpYbRv
souyXcuEgpnWMSbBCAp1MvMqOMcE3FgjSqePIs8LMU+U+5kw6v+IM3WJCTWW
DGID/kyYvnjtA77BhCK3q0dGFzNBlJUdG/R4DBn9VxsSBhnwJJTxOkD6FTk3
1eSZNAzI0Vimag+No52FHTTdKQaskqE+fOc35NS2QKDfy4AF334WcuaQwLZD
mqDxYYA2fvbR5t9JMORyN9XalgFCO/Kxhk8kSCFNcYgcoEOLTfSFtBAz+PxD
T/syFR2C/JOn07RmkGY2NeB2AR26alUc7gYy1BK+u/fw6DArLqPG7wIZ3pCX
piZvooNryAFSvbU5XLOnup20ooM4l1q8UGQOEixIWfAOh2Lyhs0+veYg2rjR
c1SBQ9GV7KcDdAzG3zpHxohxOP1MtewOE4O6bXF7KvNwuGwaERazMRDKqqL0
uTiovfhUj50YGHlr+ImHcTC0++3JCcWgT+ciSM3C4UfyjOElAgyeja8T5aXj
YMEUzw/MxaDK1j1PnoTDbGFjzCoxBjEpKeKBRByopeO3SEcwcOiqy18zYdf3
sRHnCzCQnfE4dj0eh/Bff5IbT2BwagX682YcDvVSK5RfjkHW+i1nHvBx0Nz1
PRp+CQPvkvSzlhNu/ZT27zo5Bthog5TOw+HjBn1mRxUGB29ulbVG4WDb/Khl
pQKDxG1elzojcFimn2r/tRYDF9mhy4smvGbulsSWGxjoJjfKw3bj4BtaTdl/
C4Po+95VPWE4sA71/eKnwmDFqswryycccnFxPfUOBu/ETdW8UBz42kArvRqD
Mt3ka5dCcEgyHgtXN2IQzvC9/ikYh/8AY081Fw==
        "]]},
      Annotation[#, "Charting`Private`Tag$5551#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2.5970543152669894`}, {0, 176.05728938517066`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[35]=",ExpressionUUID->"55ff0261-bf2d-41ab-86d8-9575d73751d6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"simulating", " ", "m", " ", "cells", " ", "with", " ", "few", " ", 
    RowBox[{"movements", ":", " ", 
     RowBox[{"define", " ", 
      RowBox[{"kappa", ".", " ", "Data"}], " ", "are", " ", "stored", " ", 
      "in", " ", "alldata", " ", "variable"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SeedRandom", "[", "3", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kappaT", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nsteps", "=", "100"}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"number", " ", "of", " ", "movements", " ", "per", " ", "cell"}],
      " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"ncells", "=", "500"}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"number", " ", "of", " ", "cells", " ", "simulated"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"rmean", "=", "2"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "parameter", " ", "of", " ", "the", " ", "Pareto", " ", "distribution", 
      " ", "for", " ", "step", " ", "length", " ", "movement"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"alpha", "=", "5.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xmin", "=", 
     RowBox[{"rmean", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"alpha", "-", "1"}], ")"}], "/", "alpha"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"alldata", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"onecellmovement", "=", 
         RowBox[{"NestList", "[", 
          RowBox[{"OneMovement", ",", 
           RowBox[{"{", 
            RowBox[{"x10", ",", "x20"}], "}"}], ",", "nsteps"}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"onecellmovement", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "ncells"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",ExpressionUUID->"d1d80790-80df-4513-ba11-\
2bebe9940845"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"k", "=", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tempdata1", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"EuclideanDistance", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "k"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", 
                RowBox[{"2", "*", "k"}]}], "]"}], "]"}]}], "]"}], "/", "k"}], 
          ",", 
          RowBox[{"180", "*", 
           RowBox[{
            RowBox[{"VectorAngle", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "k"}], "]"}], "]"}], "-", 
               RowBox[{"#", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", 
                  RowBox[{"2", "*", "k"}]}], "]"}], "]"}], "-", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "k"}], "]"}], "]"}]}]}], "]"}], "/", 
            RowBox[{"(", "Pi", ")"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], "-", 
           RowBox[{"2", "*", "k"}]}]}], "}"}]}], "]"}], "&"}], ",", 
     "alldata"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tempdata2", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Mean", "[", "#", "]"}], "&"}], ",", "tempdata1"}], "]"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"af20e43c-0dd5-4112-be87-5cd31a064396"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], "=", 
  RowBox[{"Fit", "[", 
   RowBox[{"tempdata2", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"slope", "=", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vmean", ",", "phimean"}], "}"}], "=", 
   RowBox[{"Mean", "[", "tempdata2", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", "tempdata2", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "180"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", "i", ",", 
            RowBox[{"{", 
             RowBox[{"0.02", ",", "0"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "180", ",", "45"}], "}"}]}], "]"}]}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Average speed per cell\>\"", ",", 
        "\"\<Average turning angle\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"Max", "[", 
        RowBox[{"tempdata2", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[45]:=",ExpressionUUID->"c758ee0b-3955-4d49-874e-198ff1635870"],

Cell[BoxData[
 RowBox[{"135.41595118208502`", "\[VeryThinSpace]", "-", 
  RowBox[{"49.07173135732028`", " ", "x"}]}]], "Output",
 CellLabel->"Out[45]=",ExpressionUUID->"d168063d-6299-4f8d-96f6-1cdb41263be5"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
cXEwKKLA/wB5shW6
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVynk4lAkcwPFJulCbM1clKbuTPE/uxvH7te+bJo3QRIQxalGjtK2obOmg
wyixxGyIoqiGnZixbcqzHWy0RIvC5AqjXCMRyvtu/fF9Pv98V+w6sC1EhcFg
uH/tm9W2tq6KYyEuO+c+OOQxxEdIlJrNLSPAsTelMHCQj01UL7NNxgXjp2Hy
8AE+5t6jiiplu6H9lDZ5/h0fz+gmjtyXRcKuGYH2o14+ThJeyTJZHAg+GpRY
tfNxnb+0s0SWCjHdh0d0X/Cxrq/3/F1ZHlypsBbIJXzUDE8z7kuQgtaN8BLu
AT52XU4wl8ZVQJJvSIWp1dff8VCHdNVTSMvG1W6DQdiXOOx2O7IaYvvsolYK
gvA32cvvGGF1EFEt2SJW8tCpA1kO3Q3wcv6dfxbs56GgocRDEN8I0lrzptqB
QAyWtKRwpprhqsX3gg2RgThO9a50ymuBaUVhfoIyALmsgu625XIIcC4KPRUd
gPveno4fv9QOLvo29zsof9SkVjgmXemEVA/HUq3j/tjACKw52twFwyZV1uOz
/TGoXDhr0OItPNja4Cc+uROfizcyjY73gJpKkGYN7YeZOv57r5f1As/jZ8+M
c37IstntKVFTgNnULNv1c/zQpabSXY/dD6NOS64JE31xsb7RmEruO1j3Rlwi
meeLf2fNJIhH34NSpdLb+ewObMpg2RdbDELZY/7Jowt34D03wQW700Mw3H7M
Uyj0Qcahj5/0Hg2D5WXjQrfFPriqUd1bOjUCg/UuKQdF3qgxobZ2300lLNvb
tXy/njc6OD9k3SZHwSdznp1+9nbkdO7JWqMcBQazeDTDYDvWLWuLThR9AKbL
K5dYERfjRDEBGbZjsHMwTlvHhIvLI7TT+zrGgJqQXIzN3oZDsS2tXbEfoSAz
+JJo5TZkrgkVlRuOQ31lmqmB2Au3Wg/eev1kHPZx2P4RTC+8EZ1TdS14Ahbt
P2EUedcT3+py7Is1PoHZe7tTHEtP5CpXlYaKP0GsSo/8dpgHWoVWFcywJ0Hq
GNSacHgrTtrzla8+TEL92jZTrUh3HCXNSV7KFExyeTFTJzjYUKQYMHeehrnW
3cbCI1vQpCRCo753GnSWhncrotzw2qipg1ncZ7B0/FyWH78ZF1ys/7N87Rew
1LrQrHaCjfm77/xI//sFHJaazakXbsLiJo7rir0zQFo/8tmV6Yo5eYrss1oU
2KgEjWVnbMTH4j8YIgkFVnNUcxxukCg/U1HnV0oB+0C0K5VL4gSvNsuojAJe
S//QkywSf9AccMgppyCpqNbJI43E5KjVB29WUdDvndEaEkcizyW7SyqnIPcm
Uy81mMTpF8LHDfNp0GB7XRxaSqLOrd+TU9VpMCt5YlNqQKLl6UKe9yIaWMZ2
8iO6JAbbVE2/1qZhj9JwjepCEp+JZll3LqPhqajnmeEXAtODj+QN29AQ8+6w
KruVQAnr3EGJPQ3J3Pd3FjYTWKOdDr+waCh8GMD9r4HAmcrStnGgoTllw3Ve
NYE/MUe0Z9xosGKpY9Q9AmNnU10V7jSw848rWFICRXINyUlPGniLlEkMCYHP
k5gcVR8aLnQ3vkksILAnbL1hlS8N+ZxNZ7zyCKSQ3X/On4b7ZX9ZLMkhUN9w
R9lmHg0vTSwa5VcItBoLiVcPpqFfePXX6+kE/g9ygFPw
        "]]},
      Annotation[#, "Charting`Private`Tag$255638#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.6313020683363784`, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Average turning angle\"", TraditionalForm], None}, {
     FormBox["\"Average speed per cell\"", TraditionalForm], None}},
  FrameTicks->{{{{0, 
       FormBox["0", TraditionalForm], {0.02, 0}}, {45, 
       FormBox["45", TraditionalForm], {0.02, 0}}, {90, 
       FormBox["90", TraditionalForm], {0.02, 0}}, {135, 
       FormBox["135", TraditionalForm], {0.02, 0}}, {180, 
       FormBox["180", TraditionalForm], {0.02, 0}}}, {{0, 
       FormBox["0", TraditionalForm], {0.02, 0}}, {45, 
       FormBox["45", TraditionalForm], {0.02, 0}}, {90, 
       FormBox["90", TraditionalForm], {0.02, 0}}, {135, 
       FormBox["135", TraditionalForm], {0.02, 0}}, {180, 
       FormBox["180", TraditionalForm], {0.02, 0}}}}, {Automatic, Automatic}},
  
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{420, 280},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{1.6313020683363784`, 1.9611926642887074`}, {0, 180}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[48]=",ExpressionUUID->"ed542b40-2a94-4ad8-a817-eeb3c4a996fb"]
}, Open  ]]
},
CellGrouping->Manual,
WindowSize->{1341, 1002},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"Magnification"->1,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792},
"PostScriptOutputFile":>FrontEnd`FileName[{$RootDirectory, "home", "vitaly"}, 
  "math.ps", CharacterEncoding -> "iso8859-1"],
"PrintCellBrackets"->False,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->False,
"PrintingMargins"->{{14.375, 14.375}, {14.375, 14.375}}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
TaggingRules->{"TryRealOnly" -> False},
ShowCellLabel->False,
Magnification->1,
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    BoxData[
     RowBox[{"kt5rl55m5jmmmmj4444pbnb3l3b4", ";", 
       RowBox[{
        "4", "hxjjtprjtptultntb3riij4ob4hhyh33v", " ", "dbd", " ", 
         "zbdrgdhgefdydgfyfyhfyhfbgrhrghrfbgehehdeyegy4ggrvrgfhbfjhfhgrhyrrety\
yytyer7ye8rer\:043a\:043e\:0432\:043b\:0430\:0448\:0448\:043a\:0435\:043e\
\:043e\:0433\:043eb4bm3bemnbvhswvdbddvsbsvdbcdhdvgevdebendvedjf"}]}]], 
    "Input", CellChangeTimes -> {{3.613555167200263*^9, 
     3.613555201071846*^9}}]}, Visible -> False, FrontEndVersion -> 
  "12.1 for Mac OS X x86 (64-bit) (June 19, 2020)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"68033a75-b638-4e27-9a5a-1a8173bd7878"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 533, 20, 287, "Title",ExpressionUUID->"2d6c8694-6b27-4d6f-8b78-a88048cc786f"],
Cell[CellGroupData[{
Cell[1115, 44, 260, 6, 54, "Subsection",ExpressionUUID->"8702ffee-3200-4205-9494-1212ae3e136e"],
Cell[1378, 52, 322, 9, 90, "Text",ExpressionUUID->"8b65efd2-58df-4566-905d-ffe8b5cc98ac"],
Cell[1703, 63, 1739, 49, 52, "Input",ExpressionUUID->"0a12dcb5-b769-4e27-8bc7-7a5333e1a1ab"],
Cell[CellGroupData[{
Cell[3467, 116, 1564, 45, 241, "Input",ExpressionUUID->"90a3c559-6b06-49d1-abdd-91ada6b6ade7"],
Cell[5034, 163, 167, 3, 34, "Output",ExpressionUUID->"20145e62-c695-4009-a957-df4e8b4706b9"],
Cell[5204, 168, 254, 5, 34, "Output",ExpressionUUID->"97a9d314-d563-416e-a5bf-b3e5ebdfc46f"],
Cell[5461, 175, 124, 1, 34, "Output",ExpressionUUID->"30776c16-25c7-45e8-819c-447b2ce7be22"]
}, Open  ]]
}, Open  ]],
Cell[5612, 180, 1569, 48, 144, "Text",ExpressionUUID->"d91f5539-6114-41da-9157-c62d8b23059c"],
Cell[CellGroupData[{
Cell[7206, 232, 1148, 35, 136, "Input",ExpressionUUID->"9e9b1ac3-3013-487b-8cfb-9dfb41583aeb"],
Cell[8357, 269, 350, 9, 34, "Output",ExpressionUUID->"b6f90635-1ed5-4056-aee0-8e402da31f6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8744, 283, 734, 19, 115, "Input",ExpressionUUID->"d295361d-3f14-434a-92d9-8c671b8a57f5"],
Cell[9481, 304, 109, 1, 34, "Output",ExpressionUUID->"09375595-05fa-417d-b9bf-baa6478b5f09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9627, 310, 1856, 48, 283, "Input",ExpressionUUID->"b6167597-a426-4d65-b351-c6a1cac6ff18"],
Cell[11486, 360, 32509, 546, 375, "Output",ExpressionUUID->"d79737e3-2734-4ed4-b7ac-e2827f9d52a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44032, 911, 2899, 79, 199, "Input",ExpressionUUID->"e9e1a665-e91a-49a9-bc23-8f3c1f72082c"],
Cell[46934, 992, 207, 3, 34, "Output",ExpressionUUID->"479d335a-260f-4e0f-8e10-f6c4d84a6fb9"],
Cell[47144, 997, 13478, 238, 244, "Output",ExpressionUUID->"55ff0261-bf2d-41ab-86d8-9575d73751d6"]
}, Open  ]],
Cell[60637, 1238, 2169, 54, 304, "Input",ExpressionUUID->"d1d80790-80df-4513-ba11-2bebe9940845"],
Cell[62809, 1294, 1910, 55, 115, "Input",ExpressionUUID->"af20e43c-0dd5-4112-be87-5cd31a064396"],
Cell[CellGroupData[{
Cell[64744, 1353, 2227, 62, 304, "Input",ExpressionUUID->"c758ee0b-3955-4d49-874e-198ff1635870"],
Cell[66974, 1417, 207, 3, 34, "Output",ExpressionUUID->"d168063d-6299-4f8d-96f6-1cdb41263be5"],
Cell[67184, 1422, 14102, 249, 297, "Output",ExpressionUUID->"ed542b40-2a94-4ad8-a817-eeb3c4a996fb"]
}, Open  ]]
}
]
*)

